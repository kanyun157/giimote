<?xml version="1.0"?>
<doc>
    <assembly>
        "GiiMote"
    </assembly>
    <members>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_set_calibration_kg34(System.Double,System.Double)">
            <summary>Sets 34kg calibration info for a given sensor</summary>
            <param name="sensor">The sensor to use</param>
            <param name="val">The calibration data</param>
            <return>Success</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_set_calibration_kg17(System.Double,System.Double)">
            <summary>Sets 17kg calibration info for a given sensor</summary>
            <param name="sensor">The sensor to use</param>
            <param name="val">The calibration data</param>
            <return>Success</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_set_calibration_kg0(System.Double,System.Double)">
            <summary>Sets 0kg calibration info for a given sensor</summary>
            <param name="sensor">The sensor to use</param>
            <param name="val">The calibration data</param>
            <return>Success</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_calibration_kg34(System.Double)">
            <summary>Gets calibration info for a given sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <return>Calibraiton info at 34kg</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_calibration_kg17(System.Double)">
            <summary>Gets calibration info for a given sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <return>Calibraiton info at 17kg</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_calibration_kg0(System.Double)">
            <summary>Gets calibration info for a given sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <return>Calibraiton info at 0kg</return>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_sensor_lbs(System.Double)">
            <summary>Returns the pounds on the specified sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <returns>Pounds</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_sensor_kgs(System.Double)">
            <summary>Returns the kilograms on the specified sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <returns>Kilograms</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_sensor_raw(System.Double)">
            <summary>Returns the raw value on the specified sensor</summary>
            <param name="sensor">The sensor to read from</param>
            <returns>Raw weight</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_weight_kgs">
            <summary>Total kilograms on the balance board</summary>
            <returns>Total mass in kilograms</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bb_get_weight_lbs">
            <summary>Total pounds on the balance board</summary>
            <returns>Total weight in pounds</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_miny(System.Double,System.Double)">
            <summary>
Sets Y-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MinY value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_maxy(System.Double,System.Double)">
            <summary>
Sets Y-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MaxY value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_midy(System.Double,System.Double)">
            <summary>
Sets Y-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MidY value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_midx(System.Double,System.Double)">
            <summary>
Sets X-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MidX value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_minx(System.Double,System.Double)">
            <summary>
Sets X-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MinX value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_maxx(System.Double,System.Double)">
            <summary>
Sets X-axis joystick calibration data
</summary>
            <param name="joystick">
The joystick to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <param name="val">MaxX value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_mintrigger(System.Double,System.Double)">
            <summary>
Sets trigger calibration data
</summary>
            <param name="trigger">
The analog trigger to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <param name="val">The calibration value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_set_calibration_maxtrigger(System.Double,System.Double)">
            <summary>
Sets trigger calibration data
</summary>
            <param name="trigger">
The analog trigger to calibrate:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <param name="val">The calibration value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_miny(System.Double)">
            <summary>
Gets Y-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_maxy(System.Double)">
            <summary>
Gets Y-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_midy(System.Double)">
            <summary>
Gets Y-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_midx(System.Double)">
            <summary>
Gets X-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_minx(System.Double)">
            <summary>
Gets X-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_maxx(System.Double)">
            <summary>
Gets X-axis joystick Calibration data
</summary>
            <param name="joystick">
The joystick to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>joyL</term><description>Left Joystick</description></item><item><term>joyR</term><description>Right Joystick</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_mintrigger(System.Double)">
            <summary>
Gets trigger calibration data
</summary>
            <param name="trigger">
The analog trigger to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_get_calibration_maxtrigger(System.Double)">
            <summary>
Gets trigger calibration data
</summary>
            <param name="trigger">
The analog trigger to get calibration data for:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_pressure(System.Double)">
            <summary>Joystick pressure</summary>
            <returns>The pressure on the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_direction(System.Double)">
            <summary>Joystick direction</summary>
            <returns>The direction of the joystick in degrees</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_rawy(System.Double)">
            <summary>Raw joystick Y-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick Y-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_rawx(System.Double)">
            <summary>Raw joystick X-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick X-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_ypos(System.Double)">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized Y-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_xpos(System.Double)">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized X-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_trigger_raw(System.Double)">
            <summary>Raw trigger pressure</summary>
            <remarks>Domain: [0,255]</remarks>
            <param name="trigger">
The trigger to check:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <returns>Raw trigger pressure</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_trigger_pressure(System.Double)">
            <summary>
Normalized trigger pressure
</summary>
            <remarks>
Domain: [0.0,1.0]
</remarks>
            <param name="trigger">
The trigger to check:
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item></list></param>
            <returns>Normalized trigger pressure</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_trigger_dead_zone">
            <summary>Gets the dead-zone value</summary>
            <returns>Trigger dead-zone value</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_trigger_dead_zone(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_classic_check_button(System.Double)">
            <summary>Checks the state of a button</summary>
            <param name="key_code">
The button to check
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnA</term><description>A Button</description></item><item><term>btnB</term><description>B Button</description></item><item><term>btnUp</term><description>D-Pad Up</description></item><item><term>btnDown</term><description>D-Pad Down</description></item><item><term>btnRight</term><description>D-Pad Right</description></item><item><term>btnLeft</term><description>D-Pad Left</description></item><item><term>btnX</term><description>X Button</description></item><item><term>btnY</term><description>Y Button</description></item><item><term>btnMinus</term><description>Minus Button</description></item><item><term>btnPlus</term><description>Plus Button</description></item><item><term>btnHome</term><description>Home Button</description></item><item><term>btnL</term><description>Left Trigger</description></item><item><term>btnR</term><description>Right Trigger</description></item><item><term>btnZL</term><description>ZL Button</description></item><item><term>btnZR</term><description>ZR Button</description></item></list></param>
            <returns>Button pressed</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_miny(System.Double)">
            <summary>
Sets the joystick Y-axis calibration 
</summary>
            <param name="val">MinY Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_minx(System.Double)">
            <summary>
Sets the joystick X-axis calibration 
</summary>
            <param name="val">MinX Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_midy(System.Double)">
            <summary>
Sets the joystick Y-axis calibration 
</summary>
            <param name="val">MidY Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_midx(System.Double)">
            <summary>
Sets the joystick X-axis calibration 
</summary>
            <param name="val">MidX Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_maxy(System.Double)">
            <summary>
Sets the joystick Y-axis calibration 
</summary>
            <param name="val">MaxY Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_maxx(System.Double)">
            <summary>
Sets the joystick X-axis calibration 
</summary>
            <param name="val">MaxX Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_zg(System.Double)">
            <summary>
Sets the gravity at rest of the accelerometer
</summary>
            <param name="val">ZG Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_z0(System.Double)">
            <summary>
Sets the zero point of the accelerometer
</summary>
            <param name="val">Z0 Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_yg(System.Double)">
            <summary>
Sets the gravity at rest of the accelerometer
</summary>
            <param name="val">YG Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_y0(System.Double)">
            <summary>
Sets the zero point of the accelerometer
</summary>
            <param name="val">Y0 Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_xg(System.Double)">
            <summary>
Sets the gravity at rest of the accelerometer
</summary>
            <param name="val">XG Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_calibration_x0(System.Double)">
            <summary>
Sets the zero point of the accelerometer
</summary>
            <param name="val">X0 Value</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_miny">
            <summary>
Gets the joystick Y-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_minx">
            <summary>
Gets the joystick X-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_midy">
            <summary>
Gets the joystick Y-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_midx">
            <summary>
Gets the joystick X-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_maxy">
            <summary>
Gets the joystick Y-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_maxx">
            <summary>
Gets the joystick X-axis calibration
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_zg">
            <summary>
Gets the gravity at rest of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_z0">
            <summary>
Gets the zero point of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_yg">
            <summary>
Gets the gravity at rest of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_y0">
            <summary>
Gets the zero point of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_xg">
            <summary>
Gets the gravity at rest of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_calibration_x0">
            <summary>
Gets the zero point of the accelerometer
</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_rawy">
            <summary>Raw joystick Y-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick Y-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_rawx">
            <summary>Raw joystick X-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick X-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_pressure">
            <summary>Joystick pressure</summary>
            <returns>The pressure on the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_direction">
            <summary>Joystick direction</summary>
            <returns>The direction of the joystick in degrees</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_ypos">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized Y-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_xpos">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized X-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_check_button(System.Double)">
            <summary>
Checks the state of a button
</summary>
            <param name="key_code">
The button to check
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnC</term><description>C Button</description></item><item><term>btnZ</term><description>Z Button</description></item></list></param>
            <returns>Button pressed</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_dead_zone_z">
            <summary>Gets the dead-zone value</summary>
            <returns>Z-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_dead_zone_y">
            <summary>Gets the dead-zone value</summary>
            <returns>Y-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_dead_zone_x">
            <summary>Gets the dead-zone value</summary>
            <returns>X-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_accel_dead_zone_z(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_accel_dead_zone_y(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_set_accel_dead_zone_x(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_rawz">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_rawy">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_rawx">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_z">
            <summary>Normalized accelerometer data</summary>
            <remarks>Domain: [0,?)</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_y">
            <summary>Normalized accelerometer data</summary>
            <remarks>Domain: [0,?)</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_nunchuck_get_accel_x">
            <summary>Normalized accelerometer data</summary>
            <remarks>Domain: [0,?)</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_whammybar_rawpos">
            <summary>Raw whammy bar position</summary>
            <remarks>Domain: [0,10]</remarks>
            <returns>Raw whammy bar position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_whammybar_pos">
            <summary>Whammy bar position</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <returns>Whammy bar position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_rawy">
            <summary>Raw joystick Y-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick Y-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_rawx">
            <summary>Raw joystick X-position</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw joystick X-position</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_pressure">
            <summary>Joystick pressure</summary>
            <returns>The pressure on the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_direction">
            <summary>Joystick direction</summary>
            <returns>The direction of the joystick in degrees</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_ypos">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized Y-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_xpos">
            <summary>Normalized joystick position</summary>
            <remarks>Domain: [-0.5,0.5]</remarks>
            <returns>The normalized X-position of the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_guitar_check_button(System.Double)">
            <summary>Checks the state of a button</summary>
            <param name="key_code">
The button to check
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnBlue</term><description>Blue Fret</description></item><item><term>btnGreen</term><description>Green Fret</description></item><item><term>btnOrange</term><description>Orange Fret</description></item><item><term>btnRed</term><description>Red Fret</description></item><item><term>btnYellow</term><description>Yellow Fret</description></item><item><term>btnStrumDown</term><description>Strum bar down</description></item><item><term>btnStrumUp</term><description>Strum bar up</description></item><item><term>btnMinus</term><description>Minus button</description></item><item><term>btnPlus</term><description>Plus button</description></item></list></param>
            <returns>Button pressed</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_display_get_y">
            <summary>Y coordinate of the screen that the Wii Remote is pointing at</summary>
            <returns>Y coordinate relative to screen</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_display_get_x">
            <summary>X coordinate of the screen that the Wii Remote is pointing at</summary>
            <returns>X coordinate relative to screen</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_rawmidy">
            <summary>Change in raw midy value</summary>
            <remarks>Domain: [0,767]</remarks>
            <returns>Delta raw midy</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_rawmidx">
            <summary>Change in raw midx value</summary>
            <remarks>Domain: [0,1023]</remarks>
            <returns>Delta raw midx</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_midy">
            <summary>Change in midy value</summary>
            <remarks>Domain: [0,1]</remarks>
            <returns>Delta midy</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_midx">
            <summary>Change in midx value</summary>
            <remarks>Domain: [0,1]</remarks>
            <returns>Delta midx</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_rawy(System.Double)">
            <summary>Change in raw y value of the given dot</summary>
            <remarks>Domain: [0,767]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Delta rawy</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_rawx(System.Double)">
            <summary>Change in raw x value of the given dot</summary>
            <remarks>Domain: [0,1023]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Delta rawx</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_y(System.Double)">
            <summary>Change in y value of the given dot</summary>
            <remarks>Domain: [0,1]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Delta y</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_delta_x(System.Double)">
            <summary>Change in x value of the given dot</summary>
            <remarks>Domain: [0,1]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Delta x</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_rawmidy">
            <summary>Raw midpoint of IR sensors 1 and 2 only along the Y-axis</summary>
            <remarks>Domain: [0,767]</remarks>
            <returns>Raw Y Midpoint</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_rawmidx">
            <summary>Raw midpoint of IR sensors 1 and 2 only along the X-axis</summary>
            <remarks>Domain: [0,1023]</remarks>
            <returns>Raw X Midpoint</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_midy">
            <summary>Normalized midpoint of IR sensors 1 and 2 only along the Y-axis</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <returns>Normalized Y Midpoint</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_midx">
            <summary>Normalized midpoint of IR sensors 1 and 2 only along the X-axis</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <returns>Normalized X Midpoint</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_rawy(System.Double)">
            <summary>Raw Y value of the given dot</summary>
            <remarks>Domain: [0,1023]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Y value of the given dot from 0 to 1023 or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_rawx(System.Double)">
            <summary>Raw X value of the given dot</summary>
            <remarks>Domain: [0,1023]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>X value of the given dot from 0 to 1023 or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_y(System.Double)">
            <summary>Normalized Y value of the given dot</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>Y value of given dot from 0.0 to 1.0 or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_get_x(System.Double)">
            <summary>Normalized X value of the given dot</summary>
            <remarks>Domain: [0.0,1.0]</remarks>
            <param name="dot_number">Dot 1-4</param>
            <returns>X value of given dot from 0.0 to 1.0 or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_dot_size(System.Double)">
            <summary>Checks the size of the given IR dot</summary>
            <param name="dot_number">Dot 1-4</param>
            <returns>Dot size from 0 to 15 or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_found_dot(System.Double)">
            <summary>Checks to see if the given IR dot is visible</summary>
            <param name="dot_number">Dot 1-4</param>
            <returns>Dot found as bool or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_get_sensitivity">
            <summary>Gets the sensitivity of the IR camera</summary>
            <returns>The IR camera's sensitivity level (1-6)</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_ir_set_sensitivity(System.Double)">
            <summary>Sets the sensitivity of the IR camera</summary>
            <param name="sensitivity">Sensitivity level 1-6</param>
            <returns>Success as bool or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_altitude">
            <summary>Distance of the Wii Remote from the sensor bar</summary>
            <returns>Distance in meters</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_yaw">
            <summary>The yaw of the Wii Remote</summary>
            <returns>Yaw in degrees or -1000 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_pitch">
            <summary>The pitch of the Wii Remote</summary>
            <returns>Pitch in degrees or -1000 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_roll">
            <summary>The roll of the Wii Remote</summary>
            <returns>Roll in degrees or -1000 on error.</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_moving">
            <summary>Is the Wii Remote moving?</summary>
            <returns>
True if the cummulative scalar force acting on the Wii Remote is greater than G, false otherwise.
-1 on error.
</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_dead_zone_z">
            <summary>Gets the dead-zone value</summary>
            <returns>Z-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_dead_zone_y">
            <summary>Gets the dead-zone value</summary>
            <returns>Y-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_dead_zone_x">
            <summary>Gets the dead-zone value</summary>
            <returns>X-axis dead zone</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_accel_dead_zone_z(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_accel_dead_zone_y(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_accel_dead_zone_x(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0,Infinity]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_rawz">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_rawy">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_rawx">
            <summary>Raw accelerometer data</summary>
            <remarks>Domain: [0,255]</remarks>
            <returns>Raw acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_z">
            <summary>Normalized accelerometer data</summary>
            <remarks>Force in G's</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_y">
            <summary>Normalized accelerometer data</summary>
            <remarks>Force in G's</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_accel_x">
            <summary>Normalized accelerometer data</summary>
            <remarks>Force in G's</remarks>
            <returns>Normalized acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_calc_accel(System.Single,System.Int32)">
            <summary>
Re-calculates the acceleration with dead-zones
</summary>
            <param name="accel">Normalized acceleration data</param>
            <param name="dz_index">The index of the dead-zone to use</param>
            <returns>Acceleration</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_joystick_dead_zone">
            <summary>Gets the dead-zone value</summary>
            <returns>Joystick dead-zone value</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_joystick_dead_zone(System.Double)">
            <summary>Sets the dead-zone value</summary>
            <remarks>Domain: [0.0,0.5]</remarks>
            <param name="val">The dead-zone value</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.joystick_pressure(System.Double,System.Double)">
            <summary>Calculates the pressure on a joystick</summary>
            <param name="xx">The normalized X value of the joystick</param>
            <param name="yy">The normalized Y value of the joystick</param>
            <returns>The pressure on the joystick</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.joystick_direction(System.Double,System.Double)">
            <summary>Calculates the direction of a joystick</summary>
            <param name="xx">The normalized X value of the joystick</param>
            <param name="yy">The normalized Y value of the joystick</param>
            <returns>The direction of the Joystick in degrees</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_check_button(System.Double)">
            <summary>Checks the state of a button</summary>
            <param name="key_code">
The button to check
<list type="bullet"><listheader><term>Key Code</term><description>Button</description></listheader><item><term>btnA</term><description>A Button</description></item><item><term>btnB</term><description>B Button</description></item><item><term>btnUp</term><description>D-Pad Up</description></item><item><term>btnDown</term><description>D-Pad Down</description></item><item><term>btnRight</term><description>D-Pad Right</description></item><item><term>btnLeft</term><description>D-Pad Left</description></item><item><term>btnOne</term><description>One Button</description></item><item><term>btnTwo</term><description>Two Button</description></item><item><term>btnMinus</term><description>Minus Button</description></item><item><term>btnPlus</term><description>Plus Button</description></item><item><term>btnHome</term><description>Home Button</description></item></list></param>
            <returns>Button pressed</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bin_write_byte(System.Double,System.Double)">
            <summary>Writes a byte to a register or memory</summary>
            <param name="address">The address to write to</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_bin_read_byte(System.Double)">
            <summary>Reads a byte from a register or memory</summary>
            <param name="address">The address to read from</param>
            <returns>Byte at address or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_zg(System.Double)">
            <summary>Sets the gravity at rest of the accelerometer</summary>
            <param name="val">ZG Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_z0(System.Double)">
            <summary>Sets the zero point of the accelerometer</summary>
            <param name="val">Z0 Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_yg(System.Double)">
            <summary>Sets the gravity at rest of the accelerometer</summary>
            <param name="val">YG Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_y0(System.Double)">
            <summary>Sets the zero point of the accelerometer</summary>
            <param name="val">Y0 Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_xg(System.Double)">
            <summary>Sets the gravity at rest of the accelerometer</summary>
            <param name="val">XG Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_calibration_x0(System.Double)">
            <summary>Sets the zero point of the accelerometer</summary>
            <param name="val">X0 Value as byte</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_zg">
            <summary>Gets the gravity at rest of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_z0">
            <summary>Gets the zero point of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_yg">
            <summary>Gets the gravity at rest of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_y0">
            <summary>Gets the zero point of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_xg">
            <summary>Gets the gravity at rest of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_calibration_x0">
            <summary>Gets the zero point of the accelerometer</summary>
            <returns>Normalized calibration data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_rumble">
            <summary>Vibration motor status</summary>
            <returns>Rumbling (1 or 0) or Error (-1)</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_rumble(System.Double)">
            <summary>Sets the vibration motor's status</summary>
            <param name="rumbling">Rumble status (true or false)</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_check_extension">
            <summary>Checks the current extension</summary>
            <returns>
Current extension:
<list type="table"><listheader><term>Code</term><description>Extension</description></listheader><item><term>1</term><description>extClassic</description></item><item><term>2</term><description>extNunchuck</description></item><item><term>3</term><description>extGuitar</description></item><item><term>0</term><description>extNone</description></item><item><term>-1</term><description>extUnknown</description></item><item><term>-2</term><description>Error</description></item></list></returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_status">
            <summary>Updates the Wii Remote's status</summary>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_battery">
            <summary>Gets the current battery level</summary>
            <returns>The current battery level between 0 and 200</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_leds_int(System.Double)">
            <summary>Sets the LEDS on the Wii Remote</summary>
            <param name="val">The state the LEDs</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_leds(System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets the state of the LEDs</summary>
            <param name="led1">The state of LED 1 (boolean)</param>
            <param name="led2">The state of LED 2 (boolean)</param>
            <param name="led3">The state of LED 3 (boolean)</param>
            <param name="led4">The state of LED 4 (boolean)</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_led(System.Double)">
            <summary>Gets the state of an LED</summary>
            <param name="led_num">The LED to get the state of (1-4)</param>
            <returns>The state of the LED</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_index">
            <summary>Gets the index of the current Wii Remote</summary>
            <returns>Index</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_index(System.Double)">
            <summary>Gets the index of the given Wii Remote</summary>
            <param name="guid">The hashed guid of the Wii Remote</param>
            <returns>Index</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_index(System.String)">
            <summary>Gets the index of the given Wii Remote</summary>
            <param name="guid">The guid of the Wii Remote</param>
            <returns>Index</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_id(System.String)">
            <summary>Hashes the guid of the given Wii Remote</summary>
            <param name="guid">The guid of the Wii Remote</param>
            <returns>Guid hash as double or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_id(System.Double)">
            <summary>Hashes the guid of the given Wii Remote</summary>
            <param name="index">The index of the Wii Remote</param>
            <returns>Guid hash as double or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_id">
            <summary>Hashes the guid of the current Wii Remote</summary>
            <returns>Guid hash as double</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_guid(System.Double)">
            <summary>Gets the guid of the given Wii Remote</summary>
            <param name="val">The index or hashed guid of the Wii Remote</param>
            <returns>guid as string or an empty string on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_guid">
            <summary>Gets the guid of the current Wii Remote</summary>
            <returns>Guid as string</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_report_continuous">
            <summary>Gets the current report interval of the Wii Remote</summary>
            <returns>
                <list type="bullet">
                    <listheader>
                        <term>Value</term>
                        <description>Report Type</description>
                    </listheader>
                    <item>
                        <term>1</term>
                        <description>Reporting continuously</description>
                    </item>
                    <item>
                        <term>0</term>
                        <description>Reporting on update</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_get_report_type">
            <summary>Gets the current report type of the Wii Remote</summary>
            <returns>
                <list type="bullet">
                    <listheader>
                        <term>Value</term>
                        <description>Report Type</description>
                    </listheader>
                    <item>
                        <term>0</term>
                        <description>rtAuto</description>
                    </item>
                    <item>
                        <term>1</term>
                        <description>rtButtons</description>
                    </item>
                    <item>
                        <term>2</term>
                        <description>rtButtonsAccel</description>
                    </item>
                    <item>
                        <term>3</term>
                        <description>rtButtonsExtension</description>
                    </item>
                    <item>
                        <term>4</term>
                        <description>rtExtensionAccel</description>
                    </item>
                    <item>
                        <term>5</term>
                        <description>rtIRAccel</description>
                    </item>
                    <item>
                        <term>6</term>
                        <description>rtIRExtensionAccel</description>
                    </item>
                    <item>
                        <term>7</term>
                        <description>rtReadData</description>
                    </item>
                    <item>
                        <term>8</term>
                        <description>rtStatus</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_report_type(System.Double,System.Double)">
            <summary>Changes the report type of the Wii Remote</summary>
            <param name="report_type">
                <list type="bullet">
                    <listheader>
                        <term>Value</term>
                        <description>Report Type</description>
                    </listheader>
                    <item>
                        <term>0</term>
                        <description>rtAuto</description>
                    </item>
                    <item>
                        <term>1</term>
                        <description>rtButtons</description>
                    </item>
                    <item>
                        <term>2</term>
                        <description>rtButtonsAccel</description>
                    </item>
                    <item>
                        <term>3</term>
                        <description>rtButtonsExtension</description>
                    </item>
                    <item>
                        <term>4</term>
                        <description>rtExtensionAccel</description>
                    </item>
                    <item>
                        <term>5</term>
                        <description>rtIRAccel</description>
                    </item>
                    <item>
                        <term>6</term>
                        <description>rtIRExtensionAccel</description>
                    </item>
                    <item>
                        <term>7</term>
                        <description>rtReadData</description>
                    </item>
                    <item>
                        <term>8</term>
                        <description>rtStatus</description>
                    </item>
                </list>
            </param>
            <param name="continuous">Report continuously</param>
            <returns>Success or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_disconnect_all">
            <summary>Disconnects all paired Wii Remotes</summary>
            <returns>Number of Wii Remotes disconnected</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_disconnect">
            <summary>Disconnect from the Wii Remote</summary>
            <returns>Wii Remote connected</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_exists">
            <summary>Checks to see if any Wii Remotes exist</summary>
            <remarks>Same as checking if wm_found is greater than 0</remarks>
            <returns>Wii Remote detected</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_connect_all">
            <summary>Connects all paired Wii Remotes</summary>
            <returns>Number of Wii Remotes connected</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_connect">
            <summary>Connect to Wii Remote</summary>
            <returns>
                <list type="table">
                    <listheader>
                        <term>Return Code</term>
                        <description>Description</description>
                    </listheader>
                    <item>
                        <term>-2</term>
                        <description>Wii Remote connected but an error occured</description>
                    </item>
                    <item>
                        <term>-1</term>
                        <description>Wii Remote already connected</description>
                    </item>
                    <item>
                        <term>0</term>
                        <description>Wii Remote failed to connect or no Wii Remote Detected</description>
                    </item>
                    <item>
                        <term>1</term>
                        <description>Wii Remote connected successfully</description>
                    </item>
                </list>
            </returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_connected">
            <summary>If the current Wii Remote is connected</summary>
            <returns>Wii Remote connected</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_using(System.String)">
            <summary>Sets the current Wii Remote to use by GUID</summary>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_set_using(System.Double)">
            <summary>Sets the current Wii Remote to use by index or numerical GUID</summary>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_found">
            <summary>Returns the number of currently discovered Wii Remotes</summary>
            <returns>Number of paired Wii Remotes or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_find_all">
            <summary>Finds all paired Wii Remotes</summary>
            <returns>Number of Wii Remotes found or -1 on error</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.domain_rescale(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Rescales a value from one domain to another</summary>
            <param name="val">The value to rescale</param>
            <param name="minin">The minimum of the input domain</param>
            <param name="maxin">The maximum of the input domain</param>
            <param name="minout">The minimum of the output domain</param>
            <param name="maxout">The maximum of the output domain</param>
            <returns>The rescaled value</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.in_domain(System.Double,System.Double,System.Double)">
            <summary>Checks a number against the given domain</summary>
            <remarks>Use -1 for infinity</remarks>
            <param name="x">The value to check</param>
            <param name="d1">The minimum value</param>
            <param name="d2">The maximum value</param>
            <returns>The closest number to x in the given domain</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_mii_data_update(System.Byte[])">
            <summary>Updates the given Mii data</summary>
            <param name="miiData">The mii data to update</param>
            <returns>Updated mii data</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_mii_update_crc(System.String)">
            <summary>Updates the CRC checksum of a mii block file</summary>
            <param name="fName">The file name</param>
            <returns>1</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_mii_data_inject(System.String,System.Double,System.Double)">
            <summary>Injects mii data to the Wii Remote</summary>
            <param name="fName">The file name</param>
            <param name="miiBlock">The mii block to inject to</param>
            <param name="miiNumber">The mii number to inject (1-10)</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_mii_data_dump(System.String,System.Double,System.Double)">
            <summary>Dumps mii data from the Wii Remote</summary>
            <param name="fName">The file name</param>
            <param name="miiBlock">The mii block to dump from (1 or 2)</param>
            <param name="miiNumber">The mii number to dump (1-10, use 0 for entire block)</param>
            <returns>Success</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_OnWiimoteChanged(System.Object,WiimoteLib.WiimoteChangedEventArgs)">
            <summary>Wii Remote state change event</summary>
            <param name="sender">Object sending the event</param>
            <param name="args">Current Wii Remote state</param>
        </member>
        <member name="M:GiiMoteLib.GiiMote.wm_OnWiimoteExtensionChanged(System.Object,WiimoteLib.WiimoteExtensionChangedEventArgs)">
            <summary>Wii Remote extension state change event</summary>
            <param name="sender">Object sending the event</param>
            <param name="args">Current extension status</param>
        </member>
        <member name="M:GiiMoteLib.GiiMote.Dispose">
            <summary>Default destructor</summary>
            <remarks>
The GiiMote destructor (~GiiMote) is not bound late.
If you introduce a class into this library which inherits from GiiMote
you will need to make the destructor bind late using the keyword "virtual."
</remarks>
            <returns>Nothing</returns>
        </member>
        <member name="M:GiiMoteLib.GiiMote.#ctor">
            <summary>Default constructor</summary>
            <returns>Nothing</returns>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_last_rawmid_pos">
            <summary>The change in the infrared midpoint's raw coordinates</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_last_mid_pos">
            <summary>The change in the infrared midpoint's coordinates</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_last_raw_pos">
            <summary>The change in an infrared point's raw coordinates</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_last_pos">
            <summary>The change in an infrared point's coordinates</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_sensitivity">
            <summary>The IR camera's sensitivity</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.continuous">
            <summary>Report continuously or on update?</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.report_type">
            <summary>The report type of the Wii Remote</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.accel_dead_zone">
            <summary>Accelerometer dead-zone values</summary>
            <remarks>
                <list type="bullet">
                    <listheader>
                        <term>Index</term>
                        <description>Dead Zone</description>
                    </listheader>
                    <item>
                        <term>0</term>
                        <description>Wii Remote X-axis</description>
                    </item>
                    <item>
                        <term>1</term>
                        <description>Wii Remote Y-axis</description>
                    </item>
                    <item>
                        <term>2</term>
                        <description>Wii Remote Z-axis</description>
                    </item>
                    <item>
                        <term>3</term>
                        <description>Nunchuck X-axis</description>
                    </item>
                    <item>
                        <term>4</term>
                        <description>Nunchuck Y-axis</description>
                    </item>
                    <item>
                        <term>5</term>
                        <description>Nunchuck Z-axis</description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="F:GiiMoteLib.GiiMote.trigger_dead_zone">
            <summary>Trigger dead-zone value</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.joystick_dead_zone">
            <summary>Joystick dead-zone value</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.ir_screen_pos">
            <summary>The position on the screen the Wii Remote is pointing at</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.display_width">
            <summary>The width of the current display</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.display_height">
            <summary>The height of the current display</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.wmGUID">
            <summary>The GUID of the current Wii Remote</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.wmIndex">
            <summary>The number of the current Wii Remote</summary>
        </member>
        <member name="F:GiiMoteLib.GiiMote.wc">
            <summary>A collection of all the Wii Remotes attatched to the system</summary>
        </member>
        <member name="T:GiiMoteLib.GiiMote">
            <summary>The class embodying GiiMote</summary>
        </member>
    </members>
</doc>